DROP CONSTRAINT ON (page:Page) ASSERT page.pageId IS UNIQUE;

//Remove all blogs
MATCH (:User)-[written:WRITTEN]->(b:Blog)
OPTIONAL MATCH (b)<-[rel]-(recommendation:Recommendation)<-[rel2:RECOMMENDS]-(:User)
DELETE written, rel, rel2, b, recommendation;

//Remove all recommendations
MATCH (r:Recommendation)-[rel]-()
DELETE r, rel;

//Page with generic label to Commitment
MATCH (b:Page)
WHERE b.label = 'Generic'
SET b:Commitment
SET b.language = b.language[0]
REMOVE b:Page, b.label;

//Remove addresses
MATCH (a:Address)-[rel]-()
DELETE a, rel;

//Remove books, links, youtube,
MATCH (b:Page)
WHERE b.label = 'Book' OR b.label = 'Youtube' OR b.label = 'Link'
OPTIONAL MATCH (b)-[rel]-()
DELETE b, rel;

//Remove all Messages, Threads, Bug Feedback, Comment, DiscussionIdea, Keyword
MATCH (b)
WHERE b:Message OR b:Thread OR b:Bug OR b:Feedback OR b:Comment OR b:DiscussionIdea OR b:Keyword
OPTIONAL MATCH (b)-[rel]-()
DELETE b, rel;


//Crate Topics
MERGE (:Topic {name: 'Gesellschaftliche Entwicklung'});
MERGE (:Topic {name: 'Umwelt'});
MERGE (:Topic {name: 'Politik'});
MERGE (:Topic {name: 'Wirtschaft'});
MERGE (:Topic {name: 'Persönliche Entwicklung'});
MERGE (:Topic {name: 'Gesundheit'});
MERGE (:Topic {name: 'Bildung'});
MERGE (:Topic {name: 'Spiritualität'});

CREATE CONSTRAINT ON (t:Topic) ASSERT t.name IS UNIQUE;

//ASSIGN Topics
MATCH (b:Commitment), (t:Topic {name: 'Gesundheit'})
WHERE 'health' IN b.topic
MERGE (b)<-[:TOPIC]-(t);

MATCH (b:Commitment), (t:Topic {name: 'Umwelt'})
WHERE 'environmental' IN b.topic
MERGE (b)<-[:TOPIC]-(t);

MATCH (b:Commitment), (t:Topic {name: 'Spiritualität'})
WHERE 'spiritual' IN b.topic
MERGE (b)<-[:TOPIC]-(t);

MATCH (b:Commitment), (t:Topic {name: 'Bildung'})
WHERE 'education' IN b.topic
MERGE (b)<-[:TOPIC]-(t);

MATCH (b:Commitment), (t:Topic {name: 'Persönliche Entwicklung'})
WHERE 'personalDevelopment' IN b.topic
MERGE (b)<-[:TOPIC]-(t);

MATCH (b:Commitment), (t:Topic {name: 'Politik'})
WHERE 'politics' IN b.topic
MERGE (b)<-[:TOPIC]-(t);

MATCH (b:Commitment), (t:Topic {name: 'Wirtschaft'})
WHERE 'economy' IN b.topic
MERGE (b)<-[:TOPIC]-(t);

MATCH (b:Commitment), (t:Topic {name: 'Gesellschaftliche Entwicklung'})
WHERE 'socialDevelopment' IN b.topic
MERGE (b)<-[:TOPIC]-(t);

//Remove topic and language
MATCH (b:Page)
REMOVE b.language, b.topic;

MATCH (b:Commitment)
REMOVE b.topic;

//Set new privacy settings
MATCH (u:User)
SET u.privacyMode = 'public';

MATCH (u:User)-[rel:HAS_PRIVACY|HAS_PRIVACY_NO_CONTACT]->(privacy:Privacy)
DELETE rel, privacy;

//Adding to existing events a region
match (event:Event)
where not (event)-[:BELONGS_TO_REGION]->(:Region)
return event

//Add new constraints
CREATE CONSTRAINT ON (b:Answer) ASSERT b.answerId IS UNIQUE;
CREATE CONSTRAINT ON (b:Commitment) ASSERT b.commitmentId IS UNIQUE;
CREATE CONSTRAINT ON (b:Question) ASSERT b.questionId IS UNIQUE;

//APOC constrains
CALL apoc.index.addAllNodes('entities',{
  User: ["name"],
  Question:  ["question"],
  Commitment: ["title"]}, {autoUpdate:true, type:"fulltext"});

CALL apoc.index.addAllNodes('keywords',{
    Topic: ["name"]}, {autoUpdate:true, type:"fulltext"});
